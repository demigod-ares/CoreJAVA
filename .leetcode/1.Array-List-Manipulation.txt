1. Two Sum : Widely considered a beginner-friendly, entry-level problem.
217. Contains Duplicate : Simple use of a set or sorting.
349. Intersection of Two Arrays : Basic set intersection logic.
350. Intersection of Two Arrays II : Slightly more complex than the first intersection problem, as it requires handling duplicate counts.
283. Move Zeroes : Involves two-pointer technique but conceptually straightforward.
448. Find All Numbers Disappeared in an Array : Uses in-place marking, requires understanding of array indexing tricks.
219. Contains Duplicate II : Adds a sliding window constraint to the basic duplicate check.
220. Contains Duplicate III (HARD!)
More advanced due to the need for efficient range queries.
73. Set Matrix Zeroes (Revisit for improvement)
Requires careful in-place manipulation and tracking of rows/columns.
141. Linked List cycle: 
142. Linked List cycle â…¡  (Medium!) : Introduction to Floyd's Tortoise and Hare. (watch youtube)
287. Find the Duplicate Number (Medium!) : Optimal solution uses cycle detection (Floyd's Tortoise and Hare), which is less intuitive.
Product of Array Except Self : Requires prefix and suffix product arrays, and cannot use division.
Top K Frequent Elements : Involves frequency counting and heap or bucket sort.
3Sum : Classic medium difficulty, requires sorting and two-pointer approach.
4Sum : Extension of 3Sum, higher complexity due to quadruplets and more nested loops.